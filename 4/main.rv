print_string:
	addi sp, sp, -0x10
	sw fp, 12(sp)
	addi fp, sp, 0x10
	sw ra, -8(fp)

	sw s2, -12(fp)

	addi s2, a0, 0
	print_string_loop:
		lbu a0, 0(s2)
		beq a0, x0, print_string_loop_exit

		call print_char

		addi s2, s2, 1
		jal x0, print_string_loop
	print_string_loop_exit:

	lw s2, -12(fp)

	lw ra, -8(fp)
	lw fp, -4(fp)
	addi sp, sp, 0x10
	jalr x0, ra, 0

print_s32:
	addi sp, sp, -0x20
	sw fp, 28(sp)
	addi fp, sp, 0x20
	sw ra, -8(fp)

	sw s2, -12(fp)
	sw s3, -16(fp)

	addi s2, a0, 0
	addi s3, fp, -0x11
	sb x0, 0(s3)

	bge s2, x0, print_int_loop
	addi a0, x0, 0x2D
	call print_char
	sub s2, x0, s2

	print_int_loop:
		addi s3, s3, -1
		addi a0, s2, 0
		addi a1, x0, 10
		call divmod
		addi s2, a0, 0
		addi a1, a1, 0x30
		sb a1, 0(s3)
		bne s2, x0, print_int_loop

	addi a0, s3, 0
	call print_string

	lw s3, -16(fp)
	lw s2, -12(fp)

	lw ra, -8(fp)
	lw fp, -4(fp)
	addi sp, sp, 0x20
	jalr x0, ra, 0

print_results:
	addi sp, sp, -0x10
	sw fp, 12(sp)
	addi fp, sp, 0x10
	sw ra, -8(fp)

	sw s1, -12(fp)
	sw s2, -16(fp)

	addi s1, a0, 0
	addi s2, a1, 0

	li a0, print_results_part1_prefix_string
	call print_string

	addi a0, s1, 0
	call print_s32

	li a0, print_results_part2_prefix_string
	call print_string

	addi a0, s2, 0
	call print_s32

	addi a0, x0, 0xA
	call print_char

	lw s1, -12(fp)
	lw s2, -16(fp)

	lw ra, -8(fp)
	lw fp, -4(fp)
	addi sp, sp, 0x10
	jalr x0, ra, 0
	
eat_u32:
	addi sp, sp, -0x20
	sw fp, 28(sp)
	addi fp, sp, 0x20
	sw ra, -8(fp)

	sw s1, -12(fp)
	sw s2, -16(fp)
	sw s3, -20(fp)
	sw s4, -24(fp)
	
	addi s1, a0, 0
	addi s2, x0, 0
	addi s4, x0, 0

	eat_u32_loop:
		lbu s3, 0(s1)
		addi s3, s3, -0x30
		addi t0, x0, 10
		bgeu s3, t0, eat_u32_loop_end
		
		addi a0, s2, 0
		addi a1, t0, 0
		call mul

		add s2, a0, s3

		addi s1, s1, 1
		addi s4, s4, 1
		jal x0, eat_u32_loop

	eat_u32_loop_end:

	addi a0, s1, 0
	addi a1, s2, 0
	addi a2, s4, 0

	lw s1, -12(fp)
	lw s2, -16(fp)
	lw s3, -20(fp)
	lw s4, -24(fp)

	lw ra, -8(fp)
	lw fp, -4(fp)
	addi sp, sp, 0x20
	jalr x0, ra, 0
	
eat_space:
	addi sp, sp, -0x10
	sw fp, 12(sp)
	addi fp, sp, 0x10
	sw ra, -8(fp)

	addi t1, x0, 32
	eat_space_loop:
		lbu t0, 0(a0)
		addi t0, t0, -1
		bgeu t0, t1, eat_space_loop_end
		addi a0, a0, 1
		jal x0, eat_space_loop
	eat_space_loop_end:

	lw ra, -8(fp)
	lw fp, -4(fp)
	addi sp, sp, 0x10
	jalr x0, ra, 0

eat_prefix:
	addi sp, sp, -0x10
	sw fp, 12(sp)
	addi fp, sp, 0x10
	sw ra, -8(fp)

	addi t0, a0, 0
	addi t1, a1, 0
	addi a1, x0, 0
	eat_prefix_loop:
		lbu t2, 0(t0)
		lbu t3, 0(t1)

		beq t3, x0, eat_prefix_loop_match
		bne t2, t3, eat_prefix_loop_end
		addi t0, t0, 1
		addi t1, t1, 1
		jal x0, eat_prefix_loop

	eat_prefix_loop_match:
	addi a0, t0, 0
	addi a1, x0, 1
	eat_prefix_loop_end:
	
	lw ra, -8(fp)
	lw fp, -4(fp)
	addi sp, sp, 0x10
	jalr x0, ra, 0
	
search_xmas:
	addi sp, sp, -0x20
	sw fp, 28(sp)
	addi fp, sp, 0x20
	sw ra, -8(fp)

	sw s1, -12(fp)
	sw s2, -16(fp)
	sw s3, -20(fp)
	sw s4, -24(fp)
	sw s5, -28(fp)
	sw s6, -32(fp)

	li t0, map_size
	lw t0, 0(t0)

	addi a2, a0, 0
	addi a3, a1, 0
	addi a0, x0, 0

	addi a5, x0, 0
	addi a6, t0, 0
	addi a7, t0, 0

	bge a2, x0, x_init_fix_end
	addi a5, a5, 3
	x_init_fix_end:

	bge x0, a2, x_end_fix_end
	addi a6, a6, -3
	x_end_fix_end:
	
	beq a3, x0, y_fix_end
	addi a7, a7, -3
	li a3, map_pitch
	lw a3, 0(a3)
	y_fix_end:

	li s1, input
	addi s2, x0, 0
	xmas_y_loop:
		add s3, x0, a5
		add s6, s1, s3
		xmas_x_loop:
			addi s4, x0, 3
			addi s5, x0, 0
			addi t0, s6, 0
			gather_loop:
				lbu t1, 0(t0)
				slli t2, s4, 3
				sll t1, t1, t2
				or s5, s5, t1
			
				add t0, t0, a2
				add t0, t0, a3
			
				addi s4, s4, -1
				bge s4, x0, gather_loop
			
			li t0, xma
			lw t0, 0(t0)
			addi t1, x0, 0x53
			slli t1, t1, 24
			or t0, t0, t1
			li t1, sam
			lw t1, 0(t1)
			addi t2, x0, 0x58
			slli t2, t2, 24
			or t1, t1, t2
			
			beq s5, t0, xmas_match
			bne s5, t1, xmas_match_end
			xmas_match:
			addi a0, a0, 1
			xmas_match_end:
			
			addi s6, s6, 1
			addi s3, s3, 1
			blt s3, a6, xmas_x_loop

		li t0, map_pitch
		lw t0, 0(t0)
		add s1, s1, t0

		addi s2, s2, 1
		blt s2, a7, xmas_y_loop

	lw s1, -12(fp)
	lw s2, -16(fp)
	lw s3, -20(fp)
	lw s4, -24(fp)
	lw s5, -28(fp)
	lw s6, -32(fp)

	lw ra, -8(fp)
	lw fp, -4(fp)
	addi sp, sp, 0x20
	jalr x0, ra, 0

search_mas:
	addi sp, sp, -0x20
	sw fp, 28(sp)
	addi fp, sp, 0x20
	sw ra, -8(fp)

	sw s1, -12(fp)
	sw s2, -16(fp)
	sw s3, -20(fp)
	sw s4, -24(fp)
	sw s5, -28(fp)
	sw s6, -32(fp)

	addi a0, x0, 0

	li s6, input
	addi s2, x0, 0
	y_loop:
		li t0, map_pitch
		lw t0, 0(t0)
		add s1, s1, t0

		addi s1, s6, 0
		addi s3, x0, 0
		x_loop:
			li t0, map_pitch
			lw t0, 0(t0)
			add t2, s1, t0
			lw t1, 0(t2)
			add t2, t2, t0
			lw t2, 0(t2)
			lw t0, 0(s1)

			andi s4, t0, 0x0FF
			srli t0, t0, 16
			andi s5, t0, 0x0FF
			srli t0, t1, 8
			andi t0, t0, 0x0FF
			slli t0, t0, 8
			or s4, s4, t0
			or s5, s5, t0
			srli t0, t2, 16
			andi t0, t0, 0x0FF
			slli t0, t0, 16
			or s4, s4, t0
			andi t0, t2, 0x0FF
			slli t0, t0, 16
			or s5, s5, t0
			
			li t0, mas
			lw t0, 0(t0)
			li t1, sam
			lw t1, 0(t1)

			beq s4, t0, match_diag
			bne s4, t1, match_end
			match_diag:
			beq s5, t0, match_anti
			bne s5, t1, match_end
			match_anti:
			addi a0, a0, 1
			match_end:

			addi s1, s1, 1
			addi s3, s3, 1
			li t0, map_size
			lw t0, 0(t0)
			blt s3, t0, x_loop

		li t0, map_pitch
		lw t0, 0(t0)
		add s6, s6, t0

		addi s2, s2, 1
		li t0, map_size
		lw t0, 0(t0)
		blt s2, t0, y_loop

	lw s1, -12(fp)
	lw s2, -16(fp)
	lw s3, -20(fp)
	lw s4, -24(fp)
	lw s5, -28(fp)
	lw s6, -32(fp)

	lw ra, -8(fp)
	lw fp, -4(fp)
	addi sp, sp, 0x20
	jalr x0, ra, 0
	

main:
	addi sp, sp, -0x20
	sw fp, 28(sp)
	addi fp, sp, 0x20
	sw ra, -8(fp)

	sw s1, -12(fp)
	sw s2, -16(fp)
	sw s3, -20(fp)
	sw s4, -24(fp)
	sw s5, -28(fp)
	sw s6, -32(fp)

	li s1, input

	addi s2, x0, 0
	addi t1, x0, 0xD
	len_loop:
		add t0, s1, s2
		lbu t0, 0(t0)
		beq t0, t1, len_loop_end
		addi s2, s2, 1
		jal x0, len_loop
	len_loop_end:

	li t0, map_size
	sw s2, 0(t0)

	addi s2, s2, 2
	li t0, map_pitch
	sw s2, 0(t0)

	addi a0, x0, 1
	addi a1, x0, 0
	call search_xmas
	li t0, part1_result
	lw t1, 0(t0)
	add t1, t1, a0
	sw t1, 0(t0)
	
	addi a0, x0, 0
	addi a1, x0, 1
	call search_xmas
	li t0, part1_result
	lw t1, 0(t0)
	add t1, t1, a0
	sw t1, 0(t0)
	
	addi a0, x0, 1
	addi a1, x0, 1
	call search_xmas
	li t0, part1_result
	lw t1, 0(t0)
	add t1, t1, a0
	sw t1, 0(t0)
	
	addi a0, x0, -1
	addi a1, x0, 1
	call search_xmas
	li t0, part1_result
	lw t1, 0(t0)
	add t1, t1, a0
	sw t1, 0(t0)
	
	call search_mas
	li t0, part2_result
	sw a0, 0(t0)
	
	li a0, part1_result
	lw a0, 0(a0)
	li a1, part2_result
	lw a1, 0(a1)
	call print_results

	lw s1, -12(fp)
	lw s2, -16(fp)
	lw s3, -20(fp)
	lw s4, -24(fp)
	lw s5, -28(fp)
	lw s6, -32(fp)

	lw ra, -8(fp)
	lw fp, -4(fp)
	addi sp, sp, 0x20
	jalr x0, ra, 0

print_results_part1_prefix_string: "Part 1 result: " 0
print_results_part2_prefix_string: 0xA "Part 2 result: " 0
part1_result: 0x00000000
part2_result: 0x00000000
map_size: 0x00000000
map_pitch: 0x00000000
xma: "XMA" 0
mas: "MAS" 0
sam: "SAM" 0
